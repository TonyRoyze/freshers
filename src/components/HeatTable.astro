---
// import {
//     Table,
//     TableBody,
//     TableCell,
//     TableHead,
//     TableHeader,
//     TableRow,
// } from "./ui/table";
// import { Badge } from "./ui/badge";
import { FACULTY_OPTIONS } from "../lib/constants";
import type { Event } from "../lib/types";

interface HeatData {
    [key: string]: {
        [key: string]: Event;
    };
}

interface Props {
    results: HeatData;
}

const { results } = Astro.props;

// Convert nested object to array of heats
const heats = Object.entries(results)
    .map(([heatNumber, lanes]) => ({
        heatNumber: parseInt(heatNumber),
        swimmers: Object.entries(lanes)
            .map(([lane, swimmer]) => ({
                ...swimmer,
                lane: parseInt(lane),
            }))
            .sort((a, b) => a.lane - b.lane),
    }))
    .sort((a, b) => a.heatNumber - b.heatNumber);
---

<div class="space-y-8">
    {
        heats.map((heat) => (
            <div>
                <h3 class="px-2 mt-4 text-md md:text-xl md:px-4">
                    Heat {heat.heatNumber} of {heats.length}
                </h3>
                <table class="w-full caption-bottom text-sm">
                    <thead class="[&_tr]:border-b">
                        <tr class="border-[var(--color-border)] transition-colors hover:bg-[var(--color-background)]/50 data-[state=selected]:bg-[var(--color-background)]">
                            <th
                                scope="col"
                                class="px-2 text-xs md:text-lg md:px-3 h-12 text-left align-middle font-medium text-[var(--color-muted-foreground)]"
                            >
                                Lane
                            </th>

                            <th
                                scope="col"
                                class="px-2 text-xs md:text-lg md:px-3 h-12 text-left align-middle font-medium text-[var(--color-muted-foreground)]"
                            >
                                Faculty
                            </th>
                            <th
                                scope="col"
                                class="px-2 text-xs md:text-lg md:px-3 h-12 text-left align-middle font-medium text-[var(--color-muted-foreground)]"
                            >
                                Name
                            </th>
                        </tr>
                    </thead>
                    <tbody class="[&_tr:last-child]:border-0">
                        {heat.swimmers.map((swimmer) => (
                            <tr class="border-[var(--color-border)] transition-colors hover:bg-[var(--color-background)]/50">
                                <td class="px-3 text-sm justify-center md:text-lg py-4 align-middle">
                                    {swimmer.lane}
                                </td>
                                <td class="px-2 md:px-3 py-4 align-middle">
                                    <span class="inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 text-xs md:text-lg border-transparent bg-[var(--color-secondary)] text-secondary-foreground hover:bg-[var(--color-secondary)]/80">
                                        {
                                            FACULTY_OPTIONS.find(
                                                (faculty) =>
                                                    faculty.id ===
                                                    swimmer.faculty_id,
                                            )?.key
                                        }
                                    </span>
                                </td>
                                <td class="hidden md:table-cell px-2 text-sm justify-center md:text-lg py-4 align-middle">
                                    {swimmer.name}
                                </td>
                                <td class="md:hidden px-2 text-sm justify-center md:text-lg py-4 align-middle">
                                    {swimmer.name.split(" ")[0]}
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        ))
    }
</div>
